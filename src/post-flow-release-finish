#!/bin/sh
#
# Runs at the end of git flow release finish
#
# Positional arguments:
# $1    The version (including the version prefix)
# $2    The origin remote
# $3    The full branch name (including the release prefix)
#
VERSION=$1
ORIGIN=$2
BRANCH=$3

# Implement your script aere.
. "$HOOKS_DIR"/gitflow-functions
ROOTDIR=$(git rev-parse --show-toplevel)

git checkout $DEVELOP_BRANCH
TMPFILE=$(mktemp --suffix=.gitflow)

gitflow_set_major_minor $VERSION
AVH_PATCH_LEVEL=$(($AVH_PATCH_LEVEL+1))
gitflow_set_dev_release
gitflow_build_version

LINENUMBER=$(($(grep -m1 -n "^= Version " $ROOTDIR/$CHANGELOG | cut -f1 -d:) -1 ))
sed ''$LINENUMBER'a= Version '$AVH_VERSION' =\n* Preparation for new development cycle.\n' $ROOTDIR/$CHANGELOG > $TMPFILE
cp $TMPFILE $ROOTDIR/$CHANGELOG

gitflow_update_version $AVH_VERSION "Preparation for new development cycle after release $VERSION"

git checkout $BRANCH
#Clean up
rm -f $TMPFILE

# To terminate the git-flow action, return a non-zero exit code.
exit 0
